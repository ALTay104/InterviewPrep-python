# class method automatically pass in cls as the first argument
# static method does not pass in anything, does not pin point any specific class variable.
# regular method pass in self instance as the first argument

class Employee:
    num_of_emps = 0
    raise_amount = 1.04

    def __init__(self, first, last, pay): #constructor, so that we can eliminate line 13-21.
        self.first = first
        self.last = last
        self.pay = pay
        self.email = first + '.' +  last + '@company.com'
        Employee.num_of_emps += 1

    def fullname(self):
        return '{} {}'.format(self.first, self.last)

    def apply_raise(self):
        self.pay = int(self.pay * self.raise_amount)

    @classmethod #decorator, treat class as the first argument instead of instance
    def set_raise_amt(cls, amount):
        cls.raise_amount = amount

    @classmethod
    def from_string(cls, emp_str):
        first, last, pay = emp_str.split('-')
        return cls(first,last,pay) #setting constructor value thru alternative class method

    @staticmethod #does not using any class variable or class method. stand alone
    def is_workday(day):
        if day.weekday() == 5 or day.weekday() == 6: #in python Mon - Sun is number 0-6
            return False
        return True

import datetime
my_date = datetime.date(2016, 7, 10)

print(Employee.is_workday(my_date))
